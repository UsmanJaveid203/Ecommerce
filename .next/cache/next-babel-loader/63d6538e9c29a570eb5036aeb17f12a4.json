{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport Sidebar from '../components/SideMenu';\nimport { withStyles } from '@material-ui/core/styles';\nimport MuiAccordion from '@material-ui/core/Accordion';\nimport MuiAccordionSummary from '@material-ui/core/AccordionSummary';\nimport MuiAccordionDetails from '@material-ui/core/AccordionDetails';\nimport Typography from '@material-ui/core/Typography';\nimport CommunityStyle from '../../public/styles/Community.module.css';\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport { useState } from 'react';\nimport Pagination from '../components/Pagination';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nconst Accordion = withStyles({\n  root: {\n    border: '1px solid rgba(0, 0, 0, .125)',\n    boxShadow: 'none',\n    '&:not(:last-child)': {\n      borderBottom: 0\n    },\n    '&:before': {\n      display: 'none'\n    },\n    '&$expanded': {\n      margin: 'auto'\n    }\n  },\n  expanded: {}\n})(MuiAccordion);\nconst AccordionSummary = withStyles({\n  root: {\n    backgroundColor: 'rgba(0, 0, 0, .03)',\n    borderBottom: '1px solid rgba(0, 0, 0, .125)',\n    marginBottom: -1,\n    minHeight: 56,\n    '&$expanded': {\n      minHeight: 56\n    }\n  },\n  content: {\n    '&$expanded': {\n      margin: '12px 0'\n    }\n  },\n  expanded: {}\n})(MuiAccordionSummary);\nconst AccordionDetails = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2)\n  }\n}))(MuiAccordionDetails);\nexport default function index({\n  user_role,\n  token,\n  result\n}) {\n  const [values, setValues] = new useState(null);\n  const router = useRouter();\n\n  const DeleteHandler = user_id => {\n    fetch(`http://localhost:3000/api/user/delteData/${user_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      router.push('/Community');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  const changeValueHanler = number => {\n    fetch(`http://localhost:3000/api/user/getAllData/${number}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      setValues(data);\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  let results = values == null ? result : values;\n\n  if (token || user_role === \"root\") {\n    var _results$data, _results$data2;\n\n    const [expanded, setExpanded] = React.useState('panel1');\n\n    const handleChange = panel => (event, newExpanded) => {\n      setExpanded(newExpanded ? panel : false);\n    };\n\n    return __jsx(React.Fragment, null, __jsx(\"div\", {\n      className: \"row\"\n    }, __jsx(Sidebar, null), __jsx(\"div\", {\n      className: `col-lg-8 col-12`\n    }, __jsx(\"div\", {\n      className: `container my-5 ${CommunityStyle.MainDiv}`\n    }, __jsx(\"h1\", {\n      className: `${CommunityStyle.mainHead}`\n    }, \"All User\"), (results === null || results === void 0 ? void 0 : (_results$data = results.data) === null || _results$data === void 0 ? void 0 : _results$data.length) !== 0 ? __jsx(React.Fragment, null, results === null || results === void 0 ? void 0 : (_results$data2 = results.data) === null || _results$data2 === void 0 ? void 0 : _results$data2.map(u_values => {\n      return __jsx(Accordion, {\n        square: true,\n        expanded: expanded === u_values._id,\n        onChange: handleChange(u_values._id)\n      }, __jsx(AccordionSummary, {\n        \"aria-controls\": \"panel1d-content\",\n        id: \"panel1d-header\"\n      }, __jsx(Typography, {\n        className: `${CommunityStyle.SmallHead}`\n      }, __jsx(\"strong\", null, \"Name : \"), u_values.u_fname, \" \", u_values.u_sname)), __jsx(AccordionDetails, null, __jsx(Typography, {\n        className: CommunityStyle.detail_main_duv\n      }, __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(\"div\", {\n        className: `col-md-3 ${CommunityStyle.photo}`\n      }, u_values.u_image ? __jsx(\"img\", {\n        src: `/images/${u_values.u_image}`,\n        className: \"rounded float-start\",\n        alt: \"User_Photo\"\n      }) : __jsx(\"img\", {\n        src: `/images/profile_img.png`,\n        className: \"rounded float-start\",\n        alt: \"User_Photo\"\n      })), __jsx(\"div\", {\n        className: `col-md-6 ${CommunityStyle.user_detail}`\n      }, __jsx(\"h3\", null, __jsx(\"strong\", null, \"Name  : \"), u_values.u_fname, \" \", u_values.u_sname), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Gmail : \"), u_values.u_email), __jsx(\"h3\", null, __jsx(\"strong\", null, \"Role    : \"), u_values.u_role), __jsx(\"div\", {\n        className: CommunityStyle.button\n      }, __jsx(Link, {\n        href: `/Community/${u_values._id}`\n      }, __jsx(\"a\", {\n        type: \"button\",\n        className: `btn ${CommunityStyle.btnn}`\n      }, \"Edit \", __jsx(\"i\", {\n        className: \"fas fa-edit\"\n      }))), __jsx(\"button\", {\n        type: \"button\",\n        className: `btn ${CommunityStyle.btnn}`,\n        onClick: DeleteHandler.bind(this, u_values._id)\n      }, \"Delete \", __jsx(\"i\", {\n        className: \"fas fa-trash\"\n      }))))))));\n    }), __jsx(Pagination, {\n      result: results,\n      changeHandler: changeValueHanler\n    })) : __jsx(\"div\", {\n      className: CommunityStyle.No_record_div\n    }, __jsx(\"h1\", null, \"Not found any user\"))))));\n  }\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n\n  if (!token || user_role === \"Admin\" || user_role === \"User\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    let res = await fetch(\"http://localhost:3000/api/user/getAllData\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    let result = await res.json();\n    return {\n      props: {\n        user_role,\n        token,\n        result\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}