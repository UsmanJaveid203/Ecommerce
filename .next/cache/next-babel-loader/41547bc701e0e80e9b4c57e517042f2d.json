{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport Sidebar from '../components/SideMenu';\nimport { useRouter } from 'next/router';\nimport Profilee from '../components/Profiles component/profilee';\nimport Head from 'next/head';\nexport default function profilee({\n  token,\n  data,\n  user_id\n}) {\n  const router = useRouter();\n\n  const DeleteHandler = () => {\n    fetch(`http://localhost:3000/api/user/delteData/${user_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      router.push('/');\n      cookie.remove('token');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Profile\")), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(Sidebar, null), __jsx(Profilee, {\n    data: data,\n    token: token,\n    user_id: user_id,\n    DeleteHandler: DeleteHandler\n  })));\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n  let user_id = user ? user.u_id : \"\";\n\n  if (!token || user_role === \"User\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    let res = await fetch(`http://localhost:3000/api/user/getData/${user_id}`, {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    });\n    let data = await res.json();\n    return {\n      props: {\n        token,\n        data,\n        user_id\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}