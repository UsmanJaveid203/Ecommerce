{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport FormData from 'form-data';\nimport Table from '../../public/styles/Table.module.css';\nimport SideMenu from '../components/SideMenu';\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport Head from 'next/head';\nexport default function index({\n  user_role,\n  token,\n  user_id\n}) {\n  if (token) {\n    if (user_role === 'Admin' || user_role === 'root') {\n      const {\n        0: values,\n        1: setValue\n      } = useState({\n        p_name: \"\",\n        p_price: \"\",\n        p_image: \"\",\n        p_category: \"\",\n        p_descrip: \"\"\n      });\n      const {\n        0: message,\n        1: setMessage\n      } = useState(\"\");\n\n      const ChangeValuehandeler = e => {\n        if (e.target.type === 'file') {\n          let key = e.target.name;\n          let val = document.getElementById(\"pro_img\").files[0];\n          setValue(preval => {\n            return _objectSpread(_objectSpread({}, preval), {}, {\n              [key]: val\n            });\n          });\n        } else {\n          let key = e.target.name;\n          let val = e.target.value;\n          setValue(preval => {\n            return _objectSpread(_objectSpread({}, preval), {}, {\n              [key]: val\n            });\n          });\n        }\n      };\n\n      const UploadHandeler = e => {\n        e.preventDefault();\n        var form = new FormData();\n        form.append('u_id', user_id);\n        form.append('p_name', values.p_name);\n        form.append('p_image', values.p_image);\n        form.append('p_price', values.p_price);\n        form.append('p_category', values.p_category);\n        form.append('p_descrip', values.p_descrip);\n        fetch('http://localhost:3000/api/product/upload_data', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: form\n        }).then(res => res.json()).then(data => {\n          setMessage(data.msg);\n          setTimeout(() => {\n            setMessage(\"\");\n          }, 3000);\n        }).catch(err => {\n          console.log(err);\n        });\n      };\n\n      return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Add Product\")), __jsx(\"div\", {\n        className: \"row\"\n      }, __jsx(SideMenu, null), __jsx(\"div\", {\n        className: \"col-lg-9 col-12\"\n      }, __jsx(\"div\", {\n        className: \"container my-5\"\n      }, __jsx(\"h1\", {\n        className: Table.tblHeading\n      }, \"Upload Product\"), message ? __jsx(\"div\", {\n        className: \"alert alert-success my-3\",\n        role: \"alert\"\n      }, message) : \"\", __jsx(\"form\", null, __jsx(\"div\", {\n        className: \"mb-3\"\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_heading\",\n        className: \"form-label\"\n      }, \"product name\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"p_name\",\n        value: values.p_name,\n        className: \"form-control\",\n        id: \"pro_heading\",\n        placeholder: \"enter product name\",\n        onChange: ChangeValuehandeler\n      })), __jsx(\"div\", {\n        className: \"mb-3 w-70\"\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_img\",\n        className: \"form-label\"\n      }, \"Product Image\"), __jsx(\"input\", {\n        type: \"file\",\n        name: \"p_image\",\n        role: \"button\",\n        value: values.p_image.fileName,\n        className: \"form-control\",\n        id: \"pro_img\",\n        onChange: ChangeValuehandeler\n      })), __jsx(\"label\", {\n        htmlFor: \"pro_cat\",\n        className: \"form-label\"\n      }, \"Product Category\"), __jsx(\"select\", {\n        className: `form-select ${Table.tblInput}`,\n        id: \"pro_cat\",\n        \"aria-label\": \"Default select example\",\n        name: \"p_category\",\n        value: values.p_category,\n        onChange: ChangeValuehandeler\n      }, __jsx(\"option\", {\n        value: \"Wallet\"\n      }, \"Wallet\"), __jsx(\"option\", {\n        value: \"Clothes\"\n      }, \"Clothes\"), __jsx(\"option\", {\n        value: \"Shoes\"\n      }, \"Shoes\"), __jsx(\"option\", {\n        value: \"Phones\"\n      }, \"Phones\"), __jsx(\"option\", {\n        value: \"Laptops\"\n      }, \"Laptops\"), __jsx(\"option\", {\n        value: \"Watches\"\n      }, \"Watches\")), __jsx(\"div\", {\n        className: \"mb-3\"\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_price\",\n        className: \"form-label\"\n      }, \"price\"), __jsx(\"input\", {\n        name: \"p_price\",\n        value: values.p_price,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"pro_price\",\n        placeholder: \"enter product price\",\n        onChange: ChangeValuehandeler\n      })), __jsx(\"div\", {\n        className: \"mb-3\"\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_text\",\n        className: \"form-label\"\n      }, \"Description\"), __jsx(\"textarea\", {\n        name: \"p_descrip\",\n        value: values.p_descrip,\n        className: \"form-control\",\n        id: \"pro_text\",\n        rows: \"5\",\n        onChange: ChangeValuehandeler\n      })), __jsx(\"button\", {\n        type: \"button\",\n        onClick: UploadHandeler,\n        className: \"btn btn-light\"\n      }, \"Upload product\"))))));\n    }\n  }\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n  let user_id = user ? user.u_id : \"\";\n\n  if (!token || user_role === \"u_role\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    return {\n      props: {\n        user_role,\n        token,\n        user_id\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}