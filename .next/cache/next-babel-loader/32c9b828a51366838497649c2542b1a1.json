{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { GET_DATA } from '../Action/BuyerAction';\nconst initialState = {\n  items: [],\n  infor: []\n};\n\nconst cartReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case GET_DATA:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        items: action.payload,\n        infor: action.infor\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default cartReducer;","map":{"version":3,"sources":["E:/Projects/Ecommerce/redux/Reducer/BuyerReducer.js"],"names":["GET_DATA","initialState","items","infor","cartReducer","state","action","type","payload"],"mappings":";;;;;;AAAA,SAAQA,QAAR,QAAwB,uBAAxB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAC,EADW;AAEjBC,EAAAA,KAAK,EAAC;AAFW,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGJ,YAAT,EAAuBK,MAAvB,KAAkC;AAClD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,QAAL;AAAe,6CACRK,KADQ;AAEXH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFH;AAGXL,QAAAA,KAAK,EAAEG,MAAM,CAACH;AAHH;;AAKf;AAAS,aAAOE,KAAP;AANb;AAQH,CATD;;AAUA,eAAeD,WAAf","sourcesContent":["import {GET_DATA } from '../Action/BuyerAction';\r\n\r\nconst initialState = {\r\n    items:[],\r\n    infor:[]\r\n}\r\n\r\nconst cartReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_DATA: return {\r\n            ...state,\r\n            items: action.payload,\r\n            infor: action.infor\r\n        }\r\n        default: return state\r\n    }\r\n}\r\nexport default cartReducer;"]},"metadata":{},"sourceType":"module"}