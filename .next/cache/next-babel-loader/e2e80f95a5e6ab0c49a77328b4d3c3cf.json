{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Ecommerce\\\\pages\\\\ADD_Product\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState } from 'react';\nimport FormData from 'form-data';\nimport Table from '../../public/styles/Table.module.css';\nimport SideMenu from '../components/SideMenu';\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport Head from 'next/head';\nexport default function index({\n  user_role,\n  token,\n  user_id\n}) {\n  if (token) {\n    if (user_role === 'Admin' || user_role === 'root') {\n      const {\n        0: values,\n        1: setValue\n      } = useState({\n        p_name: \"\",\n        p_price: \"\",\n        p_image: \"\",\n        p_category: \"\",\n        p_descrip: \"\"\n      });\n      const {\n        0: message,\n        1: setMessage\n      } = useState(\"\");\n\n      const ChangeValuehandeler = e => {\n        if (e.target.type === 'file') {\n          let key = e.target.name;\n          let val = document.getElementById(\"pro_img\").files[0];\n          setValue(preval => {\n            return _objectSpread(_objectSpread({}, preval), {}, {\n              [key]: val\n            });\n          });\n        } else {\n          let key = e.target.name;\n          let val = e.target.value;\n          setValue(preval => {\n            return _objectSpread(_objectSpread({}, preval), {}, {\n              [key]: val\n            });\n          });\n        }\n      };\n\n      const UploadHandeler = e => {\n        e.preventDefault();\n        var form = new FormData();\n        form.append('u_id', user_id);\n        form.append('p_name', values.p_name);\n        form.append('p_image', values.p_image);\n        form.append('p_price', values.p_price);\n        form.append('p_category', values.p_category);\n        form.append('p_descrip', values.p_descrip);\n        fetch('http://localhost:3000/api/product/upload_data', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          },\n          body: form\n        }).then(res => res.json()).then(data => {\n          setMessage(data.msg);\n          setTimeout(() => {\n            setMessage(\"\");\n          }, 3000);\n        }).catch(err => {\n          console.log(err);\n        });\n      };\n\n      return __jsx(React.Fragment, null, __jsx(Head, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }\n      }, __jsx(\"title\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, \"Add Product\")), __jsx(\"div\", {\n        className: \"row\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }\n      }, __jsx(SideMenu, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }), __jsx(\"div\", {\n        className: \"col-lg-9 col-12\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }\n      }, __jsx(\"div\", {\n        className: \"container my-5\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 29\n        }\n      }, __jsx(\"h1\", {\n        className: Table.tblHeading,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 33\n        }\n      }, \"Upload Product\"), message ? __jsx(\"div\", {\n        className: \"alert alert-success my-3\",\n        role: \"alert\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 44\n        }\n      }, message) : \"\", __jsx(\"form\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 33\n        }\n      }, __jsx(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_heading\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 41\n        }\n      }, \"product name\"), __jsx(\"input\", {\n        type: \"text\",\n        name: \"p_name\",\n        value: values.p_name,\n        className: \"form-control\",\n        id: \"pro_heading\",\n        placeholder: \"enter product name\",\n        onChange: ChangeValuehandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 41\n        }\n      })), __jsx(\"div\", {\n        className: \"mb-3 w-70\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_img\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 41\n        }\n      }, \"Product Image\"), __jsx(\"input\", {\n        type: \"file\",\n        name: \"p_image\",\n        role: \"button\",\n        value: values.p_image.fileName,\n        className: \"form-control\",\n        id: \"pro_img\",\n        onChange: ChangeValuehandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 41\n        }\n      })), __jsx(\"label\", {\n        htmlFor: \"pro_cat\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }, \"Product Category\"), __jsx(\"select\", {\n        className: `form-select ${Table.tblInput}`,\n        id: \"pro_cat\",\n        \"aria-label\": \"Default select example\",\n        name: \"p_category\",\n        value: values.p_category,\n        onChange: ChangeValuehandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 37\n        }\n      }, __jsx(\"option\", {\n        value: \"Wallet\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 41\n        }\n      }, \"Wallet\"), __jsx(\"option\", {\n        value: \"Clothes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 41\n        }\n      }, \"Clothes\"), __jsx(\"option\", {\n        value: \"Shoes\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 41\n        }\n      }, \"Shoes\"), __jsx(\"option\", {\n        value: \"Phones\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 41\n        }\n      }, \"Phones\"), __jsx(\"option\", {\n        value: \"Laptops\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 41\n        }\n      }, \"Laptops\"), __jsx(\"option\", {\n        value: \"Watches\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 41\n        }\n      }, \"Watches\")), __jsx(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_price\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 41\n        }\n      }, \"price\"), __jsx(\"input\", {\n        name: \"p_price\",\n        value: values.p_price,\n        type: \"text\",\n        className: \"form-control\",\n        id: \"pro_price\",\n        placeholder: \"enter product price\",\n        onChange: ChangeValuehandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 41\n        }\n      })), __jsx(\"div\", {\n        className: \"mb-3\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 37\n        }\n      }, __jsx(\"label\", {\n        htmlFor: \"pro_text\",\n        className: \"form-label\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 41\n        }\n      }, \"Description\"), __jsx(\"textarea\", {\n        name: \"p_descrip\",\n        value: values.p_descrip,\n        className: \"form-control\",\n        id: \"pro_text\",\n        rows: \"5\",\n        onChange: ChangeValuehandeler,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 41\n        }\n      })), __jsx(\"button\", {\n        type: \"button\",\n        onClick: UploadHandeler,\n        className: \"btn btn-light\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 37\n        }\n      }, \"Upload product\"))))));\n    }\n  }\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n  let user_id = user ? user.u_id : \"\";\n\n  if (!token || user_role === \"u_role\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    return {\n      props: {\n        user_role,\n        token,\n        user_id\n      }\n    };\n  }\n}","map":{"version":3,"sources":["E:/Projects/Ecommerce/pages/ADD_Product/index.js"],"names":["useState","FormData","Table","SideMenu","parseCookies","jwt","Head","index","user_role","token","user_id","values","setValue","p_name","p_price","p_image","p_category","p_descrip","message","setMessage","ChangeValuehandeler","e","target","type","key","name","val","document","getElementById","files","preval","value","UploadHandeler","preventDefault","form","append","fetch","method","headers","body","then","res","json","data","msg","setTimeout","catch","err","console","log","tblHeading","fileName","tblInput","getServerSideProps","ctx","user","decode","u_role","u_id","writeHead","Location","end","props"],"mappings":";;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,sCAAlB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,YAAT,QAA6B,SAA7B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,KAAb;AAAoBC,EAAAA;AAApB,CAAf,EAA8C;AAEzD,MAAID,KAAJ,EAAW;AACP,QAAID,SAAS,KAAK,OAAd,IAAyBA,SAAS,KAAK,MAA3C,EAAmD;AAC/C,YAAM;AAAA,WAACG,MAAD;AAAA,WAASC;AAAT,UAAqBZ,QAAQ,CAAC;AAChCa,QAAAA,MAAM,EAAE,EADwB;AAEhCC,QAAAA,OAAO,EAAE,EAFuB;AAGhCC,QAAAA,OAAO,EAAE,EAHuB;AAIhCC,QAAAA,UAAU,EAAE,EAJoB;AAKhCC,QAAAA,SAAS,EAAE;AALqB,OAAD,CAAnC;AAQA,YAAM;AAAA,WAACC,OAAD;AAAA,WAAUC;AAAV,UAAwBnB,QAAQ,CAAC,EAAD,CAAtC;;AAEA,YAAMoB,mBAAmB,GAAIC,CAAD,IAAO;AAC/B,YAAIA,CAAC,CAACC,MAAF,CAASC,IAAT,KAAkB,MAAtB,EAA8B;AAC1B,cAAIC,GAAG,GAAGH,CAAC,CAACC,MAAF,CAASG,IAAnB;AACA,cAAIC,GAAG,GAAGC,QAAQ,CAACC,cAAT,CAAwB,SAAxB,EAAmCC,KAAnC,CAAyC,CAAzC,CAAV;AACAjB,UAAAA,QAAQ,CAAEkB,MAAD,IAAY;AACjB,mDACOA,MADP;AAEI,eAACN,GAAD,GAAOE;AAFX;AAIH,WALO,CAAR;AAMH,SATD,MASO;AACH,cAAIF,GAAG,GAAGH,CAAC,CAACC,MAAF,CAASG,IAAnB;AACA,cAAIC,GAAG,GAAGL,CAAC,CAACC,MAAF,CAASS,KAAnB;AACAnB,UAAAA,QAAQ,CAAEkB,MAAD,IAAY;AACjB,mDACOA,MADP;AAEI,eAACN,GAAD,GAAOE;AAFX;AAIH,WALO,CAAR;AAMH;AACJ,OApBD;;AAsBA,YAAMM,cAAc,GAAIX,CAAD,IAAO;AAC1BA,QAAAA,CAAC,CAACY,cAAF;AACA,YAAIC,IAAI,GAAG,IAAIjC,QAAJ,EAAX;AACAiC,QAAAA,IAAI,CAACC,MAAL,CAAY,MAAZ,EAAoBzB,OAApB;AACAwB,QAAAA,IAAI,CAACC,MAAL,CAAY,QAAZ,EAAsBxB,MAAM,CAACE,MAA7B;AACAqB,QAAAA,IAAI,CAACC,MAAL,CAAY,SAAZ,EAAuBxB,MAAM,CAACI,OAA9B;AACAmB,QAAAA,IAAI,CAACC,MAAL,CAAY,SAAZ,EAAuBxB,MAAM,CAACG,OAA9B;AACAoB,QAAAA,IAAI,CAACC,MAAL,CAAY,YAAZ,EAA0BxB,MAAM,CAACK,UAAjC;AACAkB,QAAAA,IAAI,CAACC,MAAL,CAAY,WAAZ,EAAyBxB,MAAM,CAACM,SAAhC;AAEAmB,QAAAA,KAAK,CAAC,+CAAD,EAAkD;AACnDC,UAAAA,MAAM,EAAE,MAD2C;AAEnDC,UAAAA,OAAO,EAAE;AACL,6BAAkB,UAAS7B,KAAM;AAD5B,WAF0C;AAKnD8B,UAAAA,IAAI,EAAEL;AAL6C,SAAlD,CAAL,CAOKM,IAPL,CAOUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAPjB,EAQKF,IARL,CAQUG,IAAI,IAAI;AACVxB,UAAAA,UAAU,CAACwB,IAAI,CAACC,GAAN,CAAV;AACAC,UAAAA,UAAU,CAAC,MAAM;AACb1B,YAAAA,UAAU,CAAC,EAAD,CAAV;AACH,WAFS,EAEP,IAFO,CAAV;AAGH,SAbL,EAcK2B,KAdL,CAcWC,GAAG,IAAI;AACVC,UAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,SAhBL;AAkBH,OA5BD;;AA8BA,aACI,4BACI,MAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,CADJ,EAII;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAK,QAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAI,QAAA,SAAS,EAAE7C,KAAK,CAACgD,UAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEKhC,OAAO,GAAG;AAAK,QAAA,SAAS,EAAC,0BAAf;AAA0C,QAAA,IAAI,EAAC,OAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAwDA,OAAxD,CAAH,GAA4E,EAFxF,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,aAAf;AAA6B,QAAA,SAAS,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,QAAxB;AAAiC,QAAA,KAAK,EAAEP,MAAM,CAACE,MAA/C;AAAuD,QAAA,SAAS,EAAC,cAAjE;AAAgF,QAAA,EAAE,EAAC,aAAnF;AAAiG,QAAA,WAAW,EAAC,oBAA7G;AAAkI,QAAA,QAAQ,EAAEO,mBAA5I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADJ,EAKI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,IAAI,EAAC,SAAxB;AAAkC,QAAA,IAAI,EAAC,QAAvC;AAAgD,QAAA,KAAK,EAAET,MAAM,CAACI,OAAP,CAAeoC,QAAtE;AAAgF,QAAA,SAAS,EAAC,cAA1F;AAAyG,QAAA,EAAE,EAAC,SAA5G;AAAsH,QAAA,QAAQ,EAAE/B,mBAAhI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CALJ,EASI;AAAO,QAAA,OAAO,EAAC,SAAf;AAAyB,QAAA,SAAS,EAAC,YAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BATJ,EAUI;AAAQ,QAAA,SAAS,EAAG,eAAclB,KAAK,CAACkD,QAAS,EAAjD;AAAoD,QAAA,EAAE,EAAC,SAAvD;AAAiE,sBAAW,wBAA5E;AAAqG,QAAA,IAAI,EAAC,YAA1G;AAAuH,QAAA,KAAK,EAAEzC,MAAM,CAACK,UAArI;AAAiJ,QAAA,QAAQ,EAAEI,mBAA3J;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAEI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFJ,EAGI;AAAQ,QAAA,KAAK,EAAC,OAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAHJ,EAII;AAAQ,QAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,EAKI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBALJ,EAMI;AAAQ,QAAA,KAAK,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBANJ,CAVJ,EAkBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAA2B,QAAA,SAAS,EAAC,YAArC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADJ,EAEI;AAAO,QAAA,IAAI,EAAC,SAAZ;AAAsB,QAAA,KAAK,EAAET,MAAM,CAACG,OAApC;AAA6C,QAAA,IAAI,EAAC,MAAlD;AAAyD,QAAA,SAAS,EAAC,cAAnE;AAAkF,QAAA,EAAE,EAAC,WAArF;AAAiG,QAAA,WAAW,EAAC,qBAA7G;AAAmI,QAAA,QAAQ,EAAEM,mBAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAlBJ,EAsBI;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,OAAO,EAAC,UAAf;AAA0B,QAAA,SAAS,EAAC,YAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,EAEI;AAAU,QAAA,IAAI,EAAC,WAAf;AAA2B,QAAA,KAAK,EAAET,MAAM,CAACM,SAAzC;AAAoD,QAAA,SAAS,EAAC,cAA9D;AAA6E,QAAA,EAAE,EAAC,UAAhF;AAA2F,QAAA,IAAI,EAAC,GAAhG;AAAoG,QAAA,QAAQ,EAAEG,mBAA9G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAtBJ,EA0BI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEY,cAA/B;AAA+C,QAAA,SAAS,EAAC,eAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BA1BJ,CAHJ,CADJ,CAFJ,CAJJ,CADJ;AA4CH;AACJ;AACJ;AAGD,OAAO,eAAeqB,kBAAf,CAAkCC,GAAlC,EAAuC;AAC1C,QAAM;AAAE7C,IAAAA;AAAF,MAAYL,YAAY,CAACkD,GAAD,CAA9B;AACA,MAAIC,IAAI,GAAGlD,GAAG,CAACmD,MAAJ,CAAW/C,KAAX,CAAX;AACA,MAAID,SAAS,GAAI+C,IAAD,GAASA,IAAI,CAACE,MAAd,GAAuB,EAAvC;AACA,MAAI/C,OAAO,GAAI6C,IAAD,GAASA,IAAI,CAACG,IAAd,GAAqB,EAAnC;;AAEA,MAAI,CAACjD,KAAD,IAAUD,SAAS,KAAK,QAA5B,EAAsC;AAClC,UAAM;AAAEiC,MAAAA;AAAF,QAAUa,GAAhB;AACAb,IAAAA,GAAG,CAACkB,SAAJ,CAAc,GAAd,EAAmB;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAnB;AACAnB,IAAAA,GAAG,CAACoB,GAAJ;AACA,WAAO;AACHC,MAAAA,KAAK,EAAE;AADJ,KAAP;AAGH,GAPD,MAOO;AACH,WAAO;AACHA,MAAAA,KAAK,EAAE;AAAEtD,QAAAA,SAAF;AAAaC,QAAAA,KAAb;AAAoBC,QAAAA;AAApB;AADJ,KAAP;AAGH;AACJ","sourcesContent":["import { useState } from 'react';\r\nimport FormData from 'form-data';\r\nimport Table from '../../public/styles/Table.module.css';\r\nimport SideMenu from '../components/SideMenu'\r\nimport { parseCookies } from 'nookies';\r\nimport jwt from 'jsonwebtoken';\r\nimport Head from 'next/head';\r\n\r\nexport default function index({ user_role, token, user_id }) {\r\n\r\n    if (token) {\r\n        if (user_role === 'Admin' || user_role === 'root') {\r\n            const [values, setValue] = useState({\r\n                p_name: \"\",\r\n                p_price: \"\",\r\n                p_image: \"\",\r\n                p_category: \"\",\r\n                p_descrip: \"\"\r\n            });\r\n\r\n            const [message, setMessage] = useState(\"\");\r\n\r\n            const ChangeValuehandeler = (e) => {\r\n                if (e.target.type === 'file') {\r\n                    let key = e.target.name;\r\n                    let val = document.getElementById(\"pro_img\").files[0];\r\n                    setValue((preval) => {\r\n                        return {\r\n                            ...preval,\r\n                            [key]: val\r\n                        }\r\n                    })\r\n                } else {\r\n                    let key = e.target.name;\r\n                    let val = e.target.value;\r\n                    setValue((preval) => {\r\n                        return {\r\n                            ...preval,\r\n                            [key]: val\r\n                        }\r\n                    })\r\n                }\r\n            }\r\n\r\n            const UploadHandeler = (e) => {\r\n                e.preventDefault();\r\n                var form = new FormData();\r\n                form.append('u_id', user_id);\r\n                form.append('p_name', values.p_name);\r\n                form.append('p_image', values.p_image);\r\n                form.append('p_price', values.p_price);\r\n                form.append('p_category', values.p_category);\r\n                form.append('p_descrip', values.p_descrip);\r\n\r\n                fetch('http://localhost:3000/api/product/upload_data', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Authorization': `Bearer ${token}`\r\n                    },\r\n                    body: form\r\n                })\r\n                    .then(res => res.json())\r\n                    .then(data => {\r\n                        setMessage(data.msg);\r\n                        setTimeout(() => {\r\n                            setMessage(\"\");\r\n                        }, 3000)\r\n                    })\r\n                    .catch(err => {\r\n                        console.log(err);\r\n                    })\r\n\r\n            }\r\n\r\n            return (\r\n                <>\r\n                    <Head>\r\n                        <title>Add Product</title>\r\n                    </Head>\r\n                    <div className=\"row\">\r\n                        <SideMenu />\r\n                        <div className=\"col-lg-9 col-12\">\r\n                            <div className=\"container my-5\">\r\n                                <h1 className={Table.tblHeading}>Upload Product</h1>\r\n                                {message ? <div className=\"alert alert-success my-3\" role=\"alert\">{message}</div> : \"\"}\r\n                                <form>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"pro_heading\" className=\"form-label\">product name</label>\r\n                                        <input type=\"text\" name=\"p_name\" value={values.p_name} className=\"form-control\" id=\"pro_heading\" placeholder=\"enter product name\" onChange={ChangeValuehandeler} />\r\n                                    </div>\r\n                                    <div className=\"mb-3 w-70\">\r\n                                        <label htmlFor=\"pro_img\" className=\"form-label\">Product Image</label>\r\n                                        <input type=\"file\" name=\"p_image\" role=\"button\" value={values.p_image.fileName} className=\"form-control\" id=\"pro_img\" onChange={ChangeValuehandeler} />\r\n                                    </div>\r\n                                    <label htmlFor=\"pro_cat\" className=\"form-label\">Product Category</label>\r\n                                    <select className={`form-select ${Table.tblInput}`} id=\"pro_cat\" aria-label=\"Default select example\" name=\"p_category\" value={values.p_category} onChange={ChangeValuehandeler} >\r\n                                        <option value=\"Wallet\">Wallet</option>\r\n                                        <option value=\"Clothes\">Clothes</option>\r\n                                        <option value=\"Shoes\">Shoes</option>\r\n                                        <option value=\"Phones\">Phones</option>\r\n                                        <option value=\"Laptops\">Laptops</option>\r\n                                        <option value=\"Watches\">Watches</option>\r\n                                    </select>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"pro_price\" className=\"form-label\">price</label>\r\n                                        <input name=\"p_price\" value={values.p_price} type=\"text\" className=\"form-control\" id=\"pro_price\" placeholder=\"enter product price\" onChange={ChangeValuehandeler} />\r\n                                    </div>\r\n                                    <div className=\"mb-3\">\r\n                                        <label htmlFor=\"pro_text\" className=\"form-label\">Description</label>\r\n                                        <textarea name=\"p_descrip\" value={values.p_descrip} className=\"form-control\" id=\"pro_text\" rows=\"5\" onChange={ChangeValuehandeler}></textarea>\r\n                                    </div>\r\n                                    <button type=\"button\" onClick={UploadHandeler} className=\"btn btn-light\">Upload product</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    const { token } = parseCookies(ctx);\r\n    let user = jwt.decode(token);\r\n    let user_role = (user) ? user.u_role : \"\";\r\n    let user_id = (user) ? user.u_id : \"\";\r\n\r\n    if (!token || user_role === \"u_role\") {\r\n        const { res } = ctx\r\n        res.writeHead(302, { Location: \"/\" })\r\n        res.end()\r\n        return {\r\n            props: {}\r\n        }\r\n    } else {\r\n        return {\r\n            props: { user_role, token, user_id }\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}