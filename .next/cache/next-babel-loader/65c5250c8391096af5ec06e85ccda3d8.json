{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport { useState } from 'react';\nimport FormData from 'form-data';\nimport Table from '../../../public/styles/Table.module.css';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nexport default function index({\n  token,\n  user_id,\n  data\n}) {\n  const router = useRouter();\n  const {\n    0: values,\n    1: setValue\n  } = useState({\n    b_name: data[0].b_name,\n    b_img: \"\",\n    b_description: data[0].b_description\n  });\n\n  const changeHandler = e => {\n    if (e.target.type === 'file') {\n      let key = e.target.name;\n      let val = document.getElementById(\"blog_img\").files[0];\n      setValue(preval => {\n        return _objectSpread(_objectSpread({}, preval), {}, {\n          [key]: val\n        });\n      });\n    } else {\n      let key = e.target.name;\n      let val = e.target.value;\n      setValue(preval => {\n        return _objectSpread(_objectSpread({}, preval), {}, {\n          [key]: val\n        });\n      });\n    }\n  };\n\n  const UpdateHandeler = e => {\n    e.preventDefault();\n    var form = new FormData();\n    form.append('b_name', values.b_name);\n    form.append('b_img', values.b_img);\n    form.append('b_description', values.b_description);\n    fetch(`http://localhost:3000/api/blog/Update_specific_blog/${user_id}`, {\n      method: 'PATCH',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      },\n      body: form\n    }).then(res => res.json()).then(data => {\n      router.push('/MyBlog');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Update Blog\")), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-9 col-12\"\n  }, __jsx(\"div\", {\n    className: \"container my-5\"\n  }, __jsx(\"h1\", {\n    className: Table.tblHeading\n  }, \"Update Blog\"), __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_heading\",\n    className: \"form-label\"\n  }, \"Update Heading\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"b_name\",\n    value: values.b_name,\n    className: \"form-control\",\n    id: \"blog_heading\",\n    onChange: changeHandler\n  })), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_img\",\n    className: \"form-label\"\n  }, \"Update Blog Photo\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"file\",\n    name: \"b_img\",\n    value: values.b_img.fileName,\n    id: \"blog_img\",\n    onChange: changeHandler\n  })), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_text\",\n    className: \"form-label\"\n  }, \"Update Explain\"), __jsx(\"textarea\", {\n    name: \"b_description\",\n    value: values.b_description,\n    className: \"form-control\",\n    id: \"blog_text\",\n    rows: \"5\",\n    onChange: changeHandler\n  })), __jsx(\"button\", {\n    type: \"button\",\n    onClick: UpdateHandeler,\n    className: \"btn btn-light\"\n  }, \"Update blog\"))))));\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n  let user_id = ctx.params.id;\n\n  if (!token || user_role === \"User\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    const res = await fetch(`http://localhost:3000/api/blog/specific_blog/${user_id}`);\n    const data = await res.json();\n    return {\n      props: {\n        token,\n        user_id,\n        data\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}