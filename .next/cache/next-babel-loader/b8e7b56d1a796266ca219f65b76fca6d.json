{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projects\\\\Ecommerce\\\\pages\\\\CartPage\\\\index.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { parseCookies } from 'nookies';\nimport { useEffect } from 'react';\nimport Checkout from '../components/CheckOut';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { GetFromCookie, RemoveFromCookie, UpdateCounting } from '../../redux/Action/CartAction';\nimport jwt from 'jsonwebtoken';\nimport CartStyle from '../../public/styles/Cart.module.css';\nimport Head from 'next/head';\nexport default function index({\n  token,\n  user_id\n}) {\n  const dispatch = new useDispatch();\n  const Information = useSelector(state => state.cart.items);\n  const Order_no = useSelector(state => state.cart.orderItems);\n  const price = useSelector(state => state.cart.totalPrice);\n\n  const RemoveItemHandler = index => {\n    dispatch(RemoveFromCookie(index));\n  };\n\n  const changeHandler = UserInfo => {\n    let val = document.getElementById(`field${UserInfo.item._id}`).value;\n    let userInfor = {\n      val: parseInt(val),\n      id: UserInfo.item._id,\n      p_price: UserInfo.item.p_price\n    };\n    dispatch(UpdateCounting(userInfor));\n  };\n\n  useEffect(() => {\n    dispatch(GetFromCookie());\n  }, []);\n\n  if (token) {\n    return __jsx(React.Fragment, null, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }\n    }, __jsx(\"title\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }\n    }, \"Cart page\")), __jsx(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }\n    }, __jsx(\"div\", {\n      className: \"col-md-8 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: CartStyle.tblDiv,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, __jsx(\"h1\", {\n      className: CartStyle.heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 29\n      }\n    }, \"Cart Product\"), __jsx(\"table\", {\n      className: `table ${CartStyle.pro_table}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 29\n      }\n    }, __jsx(\"thead\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 33\n      }\n    }, __jsx(\"tr\", {\n      className: CartStyle.tbl_heading,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 37\n      }\n    }, __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 41\n      }\n    }, \"#NO\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 41\n      }\n    }, \"Images\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 41\n      }\n    }, \"Product Name\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 41\n      }\n    }, \"price\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 41\n      }\n    }, \"buy items\"), __jsx(\"th\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 41\n      }\n    }, \"remove item\"))), Order_no > 0 ? __jsx(\"tbody\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 37\n      }\n    }, Information === null || Information === void 0 ? void 0 : Information.map((value, index) => {\n      return __jsx(\"tr\", {\n        key: index,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 56\n        }\n      }, __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 53\n        }\n      }, index + 1), __jsx(\"td\", {\n        className: \"text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 53\n        }\n      }, __jsx(\"img\", {\n        src: `/images/${value.item.p_image}`,\n        className: `img-thumbnail ${CartStyle.image}`,\n        alt: \"category_photo\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 57\n        }\n      })), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 53\n        }\n      }, value.item.p_name), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 53\n        }\n      }, value.item.p_price), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 53\n        }\n      }, __jsx(\"input\", {\n        type: \"text\",\n        id: `field${value.item._id}`,\n        defaultValue: value.qty,\n        className: CartStyle.inputfield,\n        onChange: changeHandler.bind(this, value),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 57\n        }\n      })), __jsx(\"td\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 53\n        }\n      }, __jsx(\"a\", {\n        className: \"text-center\",\n        type: \"button\",\n        onClick: RemoveItemHandler.bind(this, index),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 57\n        }\n      }, __jsx(\"i\", {\n        className: `fas fa-minus-circle ${CartStyle.icons}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 144\n        }\n      }))));\n    })) : __jsx(\"td\", {\n      colSpan: \"7\",\n      className: CartStyle.No_record_div,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 39\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 41\n      }\n    }, \"Not found any product\"))))), __jsx(\"div\", {\n      className: \"col-md-4 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 21\n      }\n    }, __jsx(\"div\", {\n      className: `card ${CartStyle.crd}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 25\n      }\n    }, __jsx(\"div\", {\n      className: \"card-body\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 29\n      }\n    }, __jsx(\"h2\", {\n      className: `card-title ${CartStyle.crd_heading}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 33\n      }\n    }, \"Total Bill\"), __jsx(\"p\", {\n      className: `card-text ${CartStyle.card_para}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 33\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 83\n      }\n    }, \"No. of Items : \"), Order_no), __jsx(\"p\", {\n      className: `card-text ${CartStyle.card_para}`,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 33\n      }\n    }, __jsx(\"strong\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 83\n      }\n    }, \"Total Price  : \"), \"$ \", price), __jsx(Checkout, {\n      user_id: user_id,\n      price: price,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 33\n      }\n    }))))));\n  }\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_id = user ? user.u_id : \"\";\n\n  if (!token) {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/SignIn\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    return {\n      props: {\n        token,\n        user_id\n      }\n    };\n  }\n}","map":{"version":3,"sources":["E:/Projects/Ecommerce/pages/CartPage/index.js"],"names":["parseCookies","useEffect","Checkout","useDispatch","useSelector","GetFromCookie","RemoveFromCookie","UpdateCounting","jwt","CartStyle","Head","index","token","user_id","dispatch","Information","state","cart","items","Order_no","orderItems","price","totalPrice","RemoveItemHandler","changeHandler","UserInfo","val","document","getElementById","item","_id","value","userInfor","parseInt","id","p_price","tblDiv","heading","pro_table","tbl_heading","map","p_image","image","p_name","qty","inputfield","bind","icons","No_record_div","crd","crd_heading","card_para","getServerSideProps","ctx","user","decode","u_id","res","writeHead","Location","end","props"],"mappings":"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","sourcesContent":["import { parseCookies } from 'nookies';\r\nimport { useEffect } from 'react';\r\nimport Checkout from '../components/CheckOut';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { GetFromCookie, RemoveFromCookie, UpdateCounting } from '../../redux/Action/CartAction';\r\nimport jwt from 'jsonwebtoken';\r\nimport CartStyle from '../../public/styles/Cart.module.css';\r\nimport Head from 'next/head';\r\n\r\nexport default function index({ token, user_id }) {\r\n    const dispatch = new useDispatch();\r\n\r\n    const Information = useSelector(state => state.cart.items);\r\n    const Order_no = useSelector(state => state.cart.orderItems);\r\n    const price = useSelector(state => state.cart.totalPrice);\r\n\r\n    const RemoveItemHandler = (index) => {\r\n        dispatch(RemoveFromCookie(index));\r\n    }\r\n\r\n    const changeHandler = (UserInfo) => {\r\n        let val = document.getElementById(`field${UserInfo.item._id}`).value;\r\n        let userInfor = {\r\n            val: parseInt(val),\r\n            id: UserInfo.item._id,\r\n            p_price: UserInfo.item.p_price\r\n        }\r\n        dispatch(UpdateCounting(userInfor))\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(GetFromCookie());\r\n    }, [])\r\n\r\n\r\n\r\n    if (token) {\r\n        return (\r\n            <>\r\n                <Head>\r\n                    <title>Cart page</title>\r\n                </Head>\r\n                <div className=\"row\">\r\n                    <div className=\"col-md-8 col-12\">\r\n                        <div className={CartStyle.tblDiv}>\r\n                            <h1 className={CartStyle.heading}>Cart Product</h1>\r\n\r\n                            <table className={`table ${CartStyle.pro_table}`}>\r\n                                <thead>\r\n                                    <tr className={CartStyle.tbl_heading}>\r\n                                        <th>#NO</th>\r\n                                        <th>Images</th>\r\n                                        <th>Product Name</th>\r\n                                        <th>price</th>\r\n                                        <th>buy items</th>\r\n                                        <th>remove item</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {(Order_no > 0) ?\r\n                                    <tbody>\r\n                                        {\r\n                                            Information?.map((value, index) => {\r\n                                                return <tr key={index}>\r\n                                                    <td>{index + 1}</td>\r\n                                                    <td className=\"text-center\">\r\n                                                        <img src={`/images/${value.item.p_image}`} className={`img-thumbnail ${CartStyle.image}`} alt=\"category_photo\" />\r\n                                                    </td>\r\n                                                    <td>{value.item.p_name}</td>\r\n                                                    <td>{value.item.p_price}</td>\r\n                                                    <td><input type=\"text\" id={`field${value.item._id}`} defaultValue={value.qty} className={CartStyle.inputfield} onChange={changeHandler.bind(this, value)} /></td>\r\n                                                    <td><a className=\"text-center\" type=\"button\" onClick={RemoveItemHandler.bind(this, index)}><i className={`fas fa-minus-circle ${CartStyle.icons}`}></i></a></td>\r\n                                                </tr>\r\n                                            })\r\n                                        }\r\n                                    </tbody>\r\n                                    : <td colSpan=\"7\" className={CartStyle.No_record_div}>\r\n                                        <h1>Not found any product</h1>\r\n                                    </td>\r\n                                }\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"col-md-4 col-12\">\r\n                        <div className={`card ${CartStyle.crd}`}>\r\n                            <div className=\"card-body\">\r\n                                <h2 className={`card-title ${CartStyle.crd_heading}`}>Total Bill</h2>\r\n                                <p className={`card-text ${CartStyle.card_para}`}><strong>No. of Items : </strong>{Order_no}</p>\r\n                                <p className={`card-text ${CartStyle.card_para}`}><strong>Total Price  : </strong>$ {price}</p>\r\n\r\n                                <Checkout user_id={user_id} price={price} />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport async function getServerSideProps(ctx) {\r\n    const { token } = parseCookies(ctx);\r\n    let user = jwt.decode(token);\r\n    let user_id = (user) ? user.u_id : \"\";\r\n\r\n    if (!token) {\r\n        const { res } = ctx\r\n        res.writeHead(302, { Location: \"/SignIn\" })\r\n        res.end()\r\n        return {\r\n            props: {}\r\n        }\r\n    } else {\r\n        return {\r\n            props: { token, user_id }\r\n        }\r\n    }\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}