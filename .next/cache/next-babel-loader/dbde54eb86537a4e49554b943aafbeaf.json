{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\nimport BlogSpecific from '../../public/styles/BlogSpeci.module.css';\nimport { parseCookies } from 'nookies';\nimport jwt from 'jsonwebtoken';\nimport Link from 'next/link';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nexport default function index({\n  data,\n  user_id,\n  token\n}) {\n  const router = useRouter();\n\n  const DeleteHandler = () => {\n    fetch(`http://localhost:3000/api/blog/Delete_record/${user_id}`, {\n      method: 'DELETE',\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(data => {\n      router.push('/MyBlog');\n    }).catch(err => {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Blog\")), __jsx(\"div\", {\n    className: \"container\"\n  }, __jsx(\"h1\", {\n    className: BlogSpecific.heading\n  }, data[0].b_name), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: `col-12 text-center ${BlogSpecific.img_div}`\n  }, __jsx(\"img\", {\n    src: `/images/${data[0].b_img}`,\n    className: \"img-thumbnail\",\n    alt: \"product_photo\"\n  })), __jsx(\"div\", {\n    className: \"col-12\"\n  }, __jsx(\"p\", {\n    className: BlogSpecific.para\n  }, data[0].b_description)), __jsx(\"div\", {\n    className: BlogSpecific.button\n  }, __jsx(Link, {\n    href: `/Blog/WriteBlog/${data[0]._id}`\n  }, __jsx(\"a\", {\n    type: \"button\",\n    className: `btn`\n  }, \"Edit \", __jsx(\"i\", {\n    className: \"fas fa-edit\"\n  }))), __jsx(\"button\", {\n    type: \"button\",\n    className: `btn`,\n    onClick: DeleteHandler\n  }, \"Delete \", __jsx(\"i\", {\n    className: \"fas fa-trash\"\n  }))))));\n}\nexport async function getServerSideProps(ctx) {\n  const {\n    token\n  } = parseCookies(ctx);\n  let user = jwt.decode(token);\n  let user_role = user ? user.u_role : \"\";\n  let user_id = ctx.params.id;\n\n  if (!token || user_role === \"User\") {\n    const {\n      res\n    } = ctx;\n    res.writeHead(302, {\n      Location: \"/\"\n    });\n    res.end();\n    return {\n      props: {}\n    };\n  } else {\n    const res = await fetch(`http://localhost:3000/api/blog/specific_blog/${user_id}`);\n    const data = await res.json();\n    return {\n      props: {\n        data,\n        user_id,\n        token\n      }\n    };\n  }\n}","map":null,"metadata":{},"sourceType":"module"}