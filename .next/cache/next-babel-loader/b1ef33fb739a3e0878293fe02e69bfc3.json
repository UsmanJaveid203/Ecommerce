{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useState } from 'react';\nimport FormData from 'form-data';\nimport Table from '../../../public/styles/Table.module.css';\nimport { useRouter } from 'next/router';\nimport Head from 'next/head';\nexport var __N_SSP = true;\nexport default function index(_ref) {\n  var token = _ref.token,\n      user_id = _ref.user_id,\n      data = _ref.data;\n  var router = useRouter();\n\n  var _useState = useState({\n    b_name: data[0].b_name,\n    b_img: \"\",\n    b_description: data[0].b_description\n  }),\n      values = _useState[0],\n      setValue = _useState[1];\n\n  var changeHandler = function changeHandler(e) {\n    if (e.target.type === 'file') {\n      var key = e.target.name;\n      var val = document.getElementById(\"blog_img\").files[0];\n      setValue(function (preval) {\n        return _objectSpread(_objectSpread({}, preval), {}, _defineProperty({}, key, val));\n      });\n    } else {\n      var _key = e.target.name;\n      var _val = e.target.value;\n      setValue(function (preval) {\n        return _objectSpread(_objectSpread({}, preval), {}, _defineProperty({}, _key, _val));\n      });\n    }\n  };\n\n  var UpdateHandeler = function UpdateHandeler(e) {\n    e.preventDefault();\n    var form = new FormData();\n    form.append('b_name', values.b_name);\n    form.append('b_img', values.b_img);\n    form.append('b_description', values.b_description);\n    fetch(\"http://localhost:3000/api/blog/Update_specific_blog/\".concat(user_id), {\n      method: 'PATCH',\n      headers: {\n        'Authorization': \"Bearer \".concat(token)\n      },\n      body: form\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      router.push('/MyBlog');\n    })[\"catch\"](function (err) {\n      console.log(err);\n    });\n  };\n\n  return __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, \"Update Blog\")), __jsx(\"div\", {\n    className: \"row\"\n  }, __jsx(\"div\", {\n    className: \"col-lg-9 col-12\"\n  }, __jsx(\"div\", {\n    className: \"container my-5\"\n  }, __jsx(\"h1\", {\n    className: Table.tblHeading\n  }, \"Update Blog\"), __jsx(\"form\", null, __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_heading\",\n    className: \"form-label\"\n  }, \"Update Heading\"), __jsx(\"input\", {\n    type: \"text\",\n    name: \"b_name\",\n    value: values.b_name,\n    className: \"form-control\",\n    id: \"blog_heading\",\n    onChange: changeHandler\n  })), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_img\",\n    className: \"form-label\"\n  }, \"Update Blog Photo\"), __jsx(\"input\", {\n    className: \"form-control\",\n    type: \"file\",\n    name: \"b_img\",\n    value: values.b_img.fileName,\n    id: \"blog_img\",\n    onChange: changeHandler\n  })), __jsx(\"div\", {\n    className: \"mb-3\"\n  }, __jsx(\"label\", {\n    htmlFor: \"blog_text\",\n    className: \"form-label\"\n  }, \"Update Explain\"), __jsx(\"textarea\", {\n    name: \"b_description\",\n    value: values.b_description,\n    className: \"form-control\",\n    id: \"blog_text\",\n    rows: \"5\",\n    onChange: changeHandler\n  })), __jsx(\"button\", {\n    type: \"button\",\n    onClick: UpdateHandeler,\n    className: \"btn btn-light\"\n  }, \"Update blog\"))))));\n}","map":null,"metadata":{},"sourceType":"module"}